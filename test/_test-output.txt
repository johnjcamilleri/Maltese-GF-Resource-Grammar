                              
         *  *  *              
      *           *           
    *               *         
   *                          
   *                          
   *        * * * * * *       
   *        *         *       
    *       * * * *  *        
      *     *      *          
         *  *  *              
                              
This is GF version 3.2. 
License: see help -license.   
Bug reports: http://code.google.com/p/grammatical-framework/issues/list


Languages:
> 40 msec
> + reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Common.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Cat.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Noun.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Verb.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Adjective.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Adverb.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Numeral.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/NumeralTransfer.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Sentence.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Question.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Relative.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Conjunction.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Phrase.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Text.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Structural.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Idiom.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Tense.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Grammar.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Lexicon.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Lang.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Predef.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Prelude.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/ParamX.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/CommonX.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/ResEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/CatEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/MorphoEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/NounEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/VerbEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/AdjectiveEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/AdverbEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/NumeralEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/SentenceEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/QuestionEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/RelativeEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/Coordination.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/ConjunctionEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/PhraseEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/TextX.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/ParadigmsEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/MakeStructuralEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/ConstructX.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/StructuralEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/IdiomEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/TenseX.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/GrammarEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/IrregEngAbs.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/IrregEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/LexiconEng.gfo
+ reading /home/john/.cabal/share/gf-3.2/lib/alltenses/LangEng.gfo
linking ... OK

Languages: LangEng
6820 msec
Lang> 4 msec
Lang> 4 msec
Lang> 4 msec
Lang> 8 msec
Lang> Lang: PositA warm_A
LangEng: warm


84 msec
Lang> Lang: ComparA warm_A (UsePron i_Pron)
LangEng: warmer than I


4 msec
Lang> Lang: ComplA2 married_A2 (UsePron she_Pron)
LangEng: married to her


4 msec
Lang> Lang: ComplA2 married_A2 (DetNP (DetQuant (PossPron she_Pron) NumPl))
LangEng: married to hers


8 msec
Lang> Lang: ComplA2 married_A2 (DetNP (DetQuant (PossPron she_Pron) NumSg))
LangEng: married to hers


4 msec
Lang> Lang: ReflA2 married_A2
LangEng: married to myself


8 msec
Lang> 
Couldn't match expected type A
       against inferred type AP
In the expression: UseA2 married_A2

4 msec
Lang> Lang: SentAP (PositA good_A) (EmbedS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseComp (CompAdv here_Adv)))))
LangEng: good that she is here


8 msec
Lang> Lang: AdAP very_AdA (PositA warm_A)
LangEng: very warm


8 msec
Lang> 4 msec
Lang> 4 msec
Lang> 4 msec
Lang> 4 msec
Lang> Lang: PositAdvAdj warm_A
LangEng: warmly


4 msec
Lang> Lang: PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (UseN house_N))
LangEng: in the house


8 msec
Lang> Lang: ComparAdvAdj more_CAdv warm_A (UsePN john_PN)
LangEng: more warmly than John


4 msec
Lang> Lang: ComparAdvAdjS more_CAdv warm_A (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron he_Pron) (UseV run_V)))
LangEng: more warmly than he runs


8 msec
Lang> Lang: SubjS when_Subj (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV sleep_V)))
LangEng: when she sleeps


4 msec
Lang> Lang: AdNum (AdnCAdv more_CAdv) (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5))))))
LangEng: more than five


8 msec
Lang> 4 msec
Lang> 8 msec
Lang> 0 msec
Lang> 4 msec
Lang> Lang: ConjS and_Conj (BaseS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron he_Pron) (UseV walk_V))) (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV run_V))))
LangEng: he walks and she runs


12 msec
Lang> Lang: ConjAP and_Conj (BaseAP (PositA cold_A) (PositA warm_A))
LangEng: cold and warm


4 msec
Lang> Lang: ConjNP or_Conj (BaseNP (UsePron she_Pron) (UsePron we_Pron))
LangEng: she or we


8 msec
Lang> Lang: ConjAdv or_Conj (BaseAdv here_Adv there_Adv)
LangEng: here or there


8 msec
Lang> Lang: ConjS either7or_DConj (BaseS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron he_Pron) (UseV walk_V))) (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV run_V))))
LangEng: either he walks or she runs


8 msec
Lang> Lang: ConjAP both7and_DConj (BaseAP (PositA warm_A) (PositA cold_A))
LangEng: both warm and cold


8 msec
Lang> Lang: ConjNP either7or_DConj (BaseNP (UsePron he_Pron) (UsePron she_Pron))
LangEng: either he or she


4 msec
Lang> Lang: ConjAdv both7and_DConj (BaseAdv here_Adv there_Adv)
LangEng: both here and there


8 msec
Lang> 8 msec
Lang> 0 msec
Lang> 4 msec
Lang> Lang: ImpersCl (UseComp (CompAP (PositA hot_A)))
LangEng: it is hot


8 msec
Lang> Lang: GenericCl (UseV sleep_V)
LangEng: one sleeps


8 msec
Lang> Lang: CleftNP (UsePron i_Pron) (UseRCl (TTAnt TPast ASimul) PPos (RelVP IdRP (ComplSlash (SlashV2a do_V2) (UsePron it_Pron))))
LangEng: it is I who did it


12 msec
Lang> Lang: CleftAdv here_Adv (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron she_Pron) (UseV sleep_V)))
LangEng: it is here that she slept


8 msec
Lang> Lang: ExistNP (DetCN (DetQuant IndefArt NumSg) (UseN house_N))
LangEng: there is a house


4 msec
Lang> Lang: ExistIP (IdetCN (IdetQuant which_IQuant NumPl) (UseN house_N))
LangEng: which houses are there


4 msec
Lang> Lang: PredVP (UsePron i_Pron) (ProgrVP (UseV sleep_V))
LangEng: I am sleeping


8 msec
Lang> Lang: ImpPl1 (UseV go_V)
LangEng: let's go


4 msec
Lang> 8 msec
Lang> 4 msec
Lang> 4 msec
Lang> Lang: DetCN (DetQuant DefArt NumSg) (UseN man_N)
LangEng: the man


68 msec
Lang> Lang: UsePN john_PN
LangEng: John


4 msec
Lang> Lang: UsePron he_Pron
LangEng: he


4 msec
Lang> Lang: PredetNP only_Predet (DetCN (DetQuant DefArt NumSg) (UseN man_N))
LangEng: only the man


8 msec
Lang> Lang: PPartNP (DetCN (DetQuant DefArt NumSg) (UseN man_N)) see_V2
LangEng: the man seen


4 msec
Lang> Lang: AdvNP (UsePN paris_PN) today_Adv
LangEng: Paris today


4 msec
Lang> Lang: RelNP (UsePN paris_PN) (UseRCl (TTAnt TPres ASimul) PPos (RelVP IdRP (UseComp (CompAdv here_Adv))))
LangEng: Paris , which is here


12 msec
Lang> Lang: DetNP (DetQuant this_Quant (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5))))))))
LangEng: these five


4 msec
Lang> Lang: DetCN (DetQuantOrd this_Quant (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5))))))) (OrdSuperl good_A)) (UseN man_N)
LangEng: these five best men


8 msec
Lang> Lang: DetCN (DetQuant this_Quant (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5)))))))) (UseN man_N)
LangEng: these five men


8 msec
Lang> Lang: DetCN (DetQuant this_Quant NumPl) (UseN man_N)
LangEng: these men


4 msec
Lang> Lang: DetCN (DetQuant this_Quant NumSg) (UseN man_N)
LangEng: this man


8 msec
Lang> Lang: NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5))))))
LangEng: five


4 msec
Lang> Lang: NumCard (NumDigits (IIDig D_5 (IDig D_1)))
LangEng: 5 1


8 msec
Lang> Lang: NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot1plus n5 pot01)))))
LangEng: fifty - one


4 msec
Lang> Lang: NumCard (AdNum almost_AdN (NumDigits (IIDig D_5 (IDig D_1))))
LangEng: almost 5 1


8 msec
Lang> Lang: OrdDigits (IIDig D_5 (IDig D_1))
LangEng: 5 1st


4 msec
Lang> Lang: OrdNumeral (num (pot2as3 (pot1as2 (pot1plus n5 pot01))))
LangEng: fifty - first


8 msec
Lang> Lang: OrdSuperl warm_A
LangEng: warmest


4 msec
Lang> Lang: DetCN (DetQuantOrd DefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5))))))) (OrdSuperl good_A)) (UseN man_N)
LangEng: the five best men


4 msec
Lang> Lang: DetCN (DetQuant DefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5)))))))) (UseN man_N)
LangEng: the five men


12 msec
Lang> Lang: DetCN (DetQuant IndefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 pot01))))))) (UseN man_N)
LangEng: one man


8 msec
Lang> Lang: DetCN (DetQuant DefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 pot01))))))) (UseN man_N)
LangEng: the one man


8 msec
Lang> Lang: DetCN (DetQuant DefArt NumSg) (UseN man_N)
LangEng: the man


8 msec
Lang> Lang: DetCN (DetQuant DefArt NumPl) (UseN man_N)
LangEng: the men


8 msec
Lang> Lang: MassNP (UseN beer_N)
LangEng: beer


8 msec
Lang> Lang: DetCN (DetQuant (PossPron i_Pron) NumSg) (UseN house_N)
LangEng: my house


4 msec
Lang> Lang: UseN house_N
LangEng: house


8 msec
Lang> Lang: ComplN2 mother_N2 (DetCN (DetQuant DefArt NumSg) (UseN king_N))
LangEng: mother of the king


0 msec
Lang> Lang: ComplN2 (ComplN3 distance_N3 (DetCN (DetQuant this_Quant NumSg) (UseN city_N))) (UsePN paris_PN)
LangEng: distance from this city to Paris


8 msec
Lang> Lang: UseN2 mother_N2
LangEng: mother


4 msec
Lang> Lang: ComplN2 (Use2N3 distance_N3) (DetCN (DetQuant this_Quant NumSg) (UseN city_N))
LangEng: distance from this city


8 msec
Lang> Lang: ComplN2 (Use3N3 distance_N3) (UsePN paris_PN)
LangEng: distance to Paris


4 msec
Lang> Lang: UseN2 (Use2N3 distance_N3)
LangEng: distance


8 msec
Lang> Lang: AdjCN (PositA big_A) (UseN house_N)
LangEng: big house


4 msec
Lang> Lang: RelCN (UseN house_N) (UseRCl (TTAnt TPast ASimul) PPos (RelSlash IdRP (SlashVP (UsePN john_PN) (SlashV2a buy_V2))))
LangEng: house which John bought


8 msec
Lang> Lang: AdvCN (UseN house_N) (PrepNP on_Prep (DetCN (DetQuant DefArt NumSg) (UseN hill_N)))
LangEng: house on the hill


8 msec
Lang> Lang: SentCN (UseN question_N) (EmbedQS (UseQCl (TTAnt TPres ASimul) PPos (QuestIAdv where_IAdv (PredVP (UsePron she_Pron) (UseV sleep_V)))))
LangEng: question where she sleeps


4 msec
Lang> Lang: DetCN (DetQuant DefArt NumSg) (ApposCN (UseN city_N) (UsePN paris_PN))
LangEng: the city Paris


8 msec
Lang> Lang: DetCN (DetQuant (PossPron i_Pron) NumSg) (ApposCN (UseN friend_N) (UsePN john_PN))
LangEng: my friend John


8 msec
Lang> 4 msec
Lang> 4 msec
Lang> 4 msec
Lang> Lang: num (pot2as3 (pot1as2 (pot0as1 (pot0 n6))))
LangEng: six


8 msec
Lang> Lang: num (pot2as3 (pot1as2 (pot0as1 pot01)))
LangEng: one


4 msec
Lang> Lang: num (pot2as3 (pot1as2 (pot1 n6)))
LangEng: sixty


4 msec
Lang> Lang: num (pot2as3 (pot1as2 pot110))
LangEng: ten


8 msec
Lang> Lang: num (pot2as3 (pot1as2 pot111))
LangEng: eleven


4 msec
Lang> Lang: num (pot2as3 (pot1as2 (pot1to19 n6)))
LangEng: sixteen


8 msec
Lang> Lang: num (pot2as3 (pot1as2 (pot1 n6)))
LangEng: sixty


4 msec
Lang> Lang: num (pot2as3 (pot1as2 (pot1plus n6 (pot0 n5))))
LangEng: sixty - five


8 msec
Lang> Lang: num (pot2as3 (pot2 (pot0 n4)))
LangEng: four hundred


4 msec
Lang> Lang: num (pot2as3 (pot2plus (pot0 n4) (pot1plus n6 (pot0 n7))))
LangEng: four hundred and sixty - seven


8 msec
Lang> Lang: num (pot3 (pot2plus (pot0 n4) (pot1plus n6 (pot0 n7))))
LangEng: four hundred and sixty - seven thousand


8 msec
Lang> Lang: num (pot3plus (pot2plus (pot0 n4) (pot1plus n6 (pot0 n7))) (pot1as2 (pot1plus n8 (pot0 n9))))
LangEng: four hundred and sixty - seven thousand eighty - nine


4 msec
Lang> Lang: IDig D_8
LangEng: 8


4 msec
Lang> Lang: IIDig D_8 (IIDig D_0 (IIDig D_0 (IIDig D_1 (IIDig D_7 (IIDig D_8 (IDig D_9))))))
LangEng: 8 , 0 0 1 , 7 8 9


4 msec
Lang> 8 msec
Lang> 4 msec
Lang> 4 msec
Lang> 4 msec
Lang> Lang: PhrUtt but_PConj (UttImpSg PPos (ImpVP (AdvVP (UseV come_V) here_Adv))) (VocNP (DetCN (DetQuant (PossPron i_Pron) NumSg) (UseN friend_N)))
LangEng: but come here , my friend


8 msec
Lang> Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePN john_PN) (UseV walk_V)))) NoVoc
LangEng: John walks


8 msec
Lang> Lang: UttQS (UseQCl (TTAnt TPres ASimul) PPos (QuestCl (PredVP (UsePron it_Pron) (UseComp (CompAP (PositA good_A))))))
LangEng: is it good


8 msec
Lang> Lang: UttImpSg PNeg (ImpVP (ReflVP (SlashV2a love_V2)))
LangEng: don't love yourself


8 msec
Lang> Lang: UttImpPl PNeg (ImpVP (ReflVP (SlashV2a love_V2)))
LangEng: don't love yourselves


8 msec
Lang> Lang: UttImpPol PNeg (ImpVP (UseV sleep_V))
LangEng: don't sleep


4 msec
Lang> Lang: UttIP whoPl_IP
LangEng: who


8 msec
Lang> Lang: UttIP whoSg_IP
LangEng: who


4 msec
Lang> Lang: UttIAdv why_IAdv
LangEng: why


0 msec
Lang> Lang: UttNP (DetCN (DetQuant this_Quant NumSg) (UseN man_N))
LangEng: this man


8 msec
Lang> Lang: UttAdv here_Adv
LangEng: here


4 msec
Lang> Lang: UttVP (UseV sleep_V)
LangEng: to sleep


8 msec
Lang> Lang: VocNP (DetCN (DetQuant (PossPron i_Pron) NumSg) (UseN friend_N))
LangEng: , my friend


4 msec
Lang> 4 msec
Lang> 4 msec
Lang> 4 msec
Lang> 8 msec
Lang> Lang: QuestCl (PredVP (UsePN john_PN) (UseV walk_V))
LangEng: does John walk


4 msec
Lang> Lang: QuestVP whoSg_IP (UseV walk_V)
LangEng: who walks


8 msec
Lang> Lang: QuestSlash whoSg_IP (SlashVP (UsePN john_PN) (SlashV2a love_V2))
LangEng: whom does John love


4 msec
Lang> Lang: QuestIAdv why_IAdv (PredVP (UsePN john_PN) (UseV walk_V))
LangEng: why does John walk


8 msec
Lang> Lang: QuestIComp (CompIAdv where_IAdv) (UsePN john_PN)
LangEng: where is John


4 msec
Lang> Lang: IdetCN (IdetQuant which_IQuant (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5)))))))) (UseN song_N)
LangEng: which five songs


8 msec
Lang> Lang: IdetIP (IdetQuant which_IQuant (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5))))))))
LangEng: which five


8 msec
Lang> Lang: AdvIP whoSg_IP (PrepNP in_Prep (UsePN paris_PN))
LangEng: who in Paris


8 msec
Lang> Lang: IdetIP (IdetQuant which_IQuant NumSg)
LangEng: which


8 msec
Lang> Lang: PrepIP with_Prep whoSg_IP
LangEng: with whom


8 msec
Lang> Lang: QuestIComp (CompIAdv where_IAdv) (UsePron it_Pron)
LangEng: where is it


4 msec
Lang> Lang: QuestIComp (CompIP whoSg_IP) (UsePron it_Pron)
LangEng: who is it


8 msec
Lang> 8 msec
Lang> 4 msec
Lang> 0 msec
Lang> 4 msec
Lang> Lang: ExistNP (DetCN (DetQuant IndefArt NumSg) (RelCN (UseN woman_N) (UseRCl (TTAnt TPres ASimul) PPos (RelCl (PredVP (UsePN john_PN) (ComplSlash (SlashV2a love_V2) (UsePron she_Pron)))))))
LangEng: there is a woman such that John loves her


12 msec
Lang> Lang: ExistNP (DetCN (DetQuant IndefArt NumSg) (RelCN (UseN woman_N) (UseRCl (TTAnt TPres ASimul) PPos (RelVP IdRP (ComplSlash (SlashV2a love_V2) (UsePN john_PN))))))
LangEng: there is a woman who loves John


8 msec
Lang> Lang: ExistNP (DetCN (DetQuant IndefArt NumSg) (RelCN (UseN woman_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePN john_PN) (SlashV2a love_V2))))))
LangEng: there is a woman whom John loves


8 msec
Lang> Lang: ExistNP (DetCN (DetQuant IndefArt NumSg) (RelCN (UseN woman_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash (FunRP possess_Prep (DetCN (DetQuant DefArt NumSg) (UseN2 mother_N2)) IdRP) (SlashVP (UsePN john_PN) (SlashV2a love_V2))))))
LangEng: there is a woman the mother of whom John loves


12 msec
Lang> 4 msec
Lang> 4 msec
Lang> 8 msec
Lang> Lang: PredVP (UsePN john_PN) (UseV walk_V)
LangEng: John walks


4 msec
Lang> Lang: PredSCVP (EmbedS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV go_V)))) (UseComp (CompAP (PositA good_A)))
LangEng: that she goes is good


8 msec
Lang> Lang: RelCN (UseN girl_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePron he_Pron) (SlashV2a see_V2))))
LangEng: girl whom he sees


8 msec
Lang> Lang: RelCN (UseN girl_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (AdvSlash (SlashVP (UsePron he_Pron) (SlashV2a see_V2)) today_Adv)))
LangEng: girl whom he sees today


8 msec
Lang> Lang: RelCN (UseN girl_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashPrep (PredVP (UsePron he_Pron) (UseV walk_V)) with_Prep)))
LangEng: girl with whom he walks


8 msec
Lang> Lang: RelCN (UseN girl_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVS (UsePron she_Pron) say_VS (UseSlash (TTAnt TPres ASimul) PPos (SlashVP (UsePron he_Pron) (SlashV2a love_V2))))))
LangEng: girl whom she says that he loves


8 msec
Lang> Lang: ImpVP (ReflVP (SlashV2a love_V2))
LangEng: love yourself


4 msec
Lang> Lang: EmbedS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV go_V)))
LangEng: that she goes


8 msec
Lang> Lang: EmbedQS (UseQCl (TTAnt TPres ASimul) PPos (QuestVP whoSg_IP (UseV go_V)))
LangEng: who goes


8 msec
Lang> Lang: EmbedVP (UseV go_V)
LangEng: to go


4 msec
Lang> Lang: UseCl (TTAnt TCond AAnter) PNeg (PredVP (UsePN john_PN) (UseV walk_V))
LangEng: John wouldn't have walked


8 msec
Lang> Lang: UseQCl (TTAnt TCond AAnter) PNeg (QuestCl (PredVP (UsePN john_PN) (UseV walk_V)))
LangEng: wouldn't John have walked


8 msec
Lang> Lang: RelCN (UseN girl_N) (UseRCl (TTAnt TCond AAnter) PNeg (RelVP IdRP (UseV walk_V)))
LangEng: girl who wouldn't have walked


4 msec
Lang> Lang: RelCN (UseN girl_N) (UseRCl (TTAnt TCond AAnter) PNeg (RelSlash IdRP (SlashPrep (PredVP (UsePron i_Pron) (UseV walk_V)) with_Prep)))
LangEng: girl with whom I wouldn't have walked


8 msec
Lang> Lang: RelS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV sleep_V))) (UseRCl (TTAnt TPres ASimul) PPos (RelVP IdRP (UseComp (CompAP (PositA good_A)))))
LangEng: she sleeps , which is good


12 msec
Lang> 4 msec
Lang> 4 msec
Lang> 4 msec
Lang> 4 msec
Lang> Lang: TEmpty
LangEng: 


4 msec
Lang> Lang: TFullStop (PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePN john_PN) (UseV walk_V)))) NoVoc) TEmpty
LangEng: John walks .


4 msec
Lang> Lang: TQuestMark (PhrUtt NoPConj (UttQS (UseQCl (TTAnt TPres ASimul) PPos (QuestCl (PredVP (UsePron they_Pron) (UseComp (CompAdv here_Adv)))))) NoVoc) TEmpty
LangEng: are they here ?


12 msec
Lang> Lang: TExclMark (PhrUtt NoPConj (ImpPl1 (UseV go_V)) NoVoc) TEmpty
LangEng: let's go !


4 msec
Lang> 4 msec
Lang> 4 msec
Lang> 4 msec
Lang> Lang: PredVP (UsePron i_Pron) (UseV sleep_V)
LangEng: I sleep


8 msec
Lang> Lang: PredVP (UsePron i_Pron) (ComplVV want_VV (UseV run_V))
LangEng: I want to run


8 msec
Lang> Lang: PredVP (UsePron i_Pron) (ComplVS say_VS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV run_V))))
LangEng: I say that she runs


8 msec
Lang> Lang: PredVP (UsePron i_Pron) (ComplVQ wonder_VQ (UseQCl (TTAnt TPres ASimul) PPos (QuestVP whoSg_IP (UseV run_V))))
LangEng: I wonder who runs


4 msec
Lang> Lang: PredVP (UsePron they_Pron) (ComplVA become_VA (PositA red_A))
LangEng: they become red


8 msec
Lang> Lang: PredVP (UsePron i_Pron) (ComplSlash (Slash3V3 give_V3 (UsePron he_Pron)) (UsePron it_Pron))
LangEng: I give it to him


8 msec
Lang> Lang: PredVP (UsePron i_Pron) (ComplSlash (SlashV2V beg_V2V (UseV go_V)) (UsePron she_Pron))
LangEng: I beg her to go


8 msec
Lang> Lang: PredVP (UsePron i_Pron) (ComplSlash (SlashV2S answer_V2S (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron it_Pron) (UseComp (CompAP (PositA good_A)))))) (UsePron he_Pron))
LangEng: I answer to him that it is good


12 msec
Lang> Lang: PredVP (UsePron i_Pron) (ComplSlash (SlashV2Q ask_V2Q (UseQCl (TTAnt TPast ASimul) PPos (QuestVP whoSg_IP (UseV come_V)))) (UsePron he_Pron))
LangEng: I ask him who came


8 msec
Lang> Lang: PredVP (UsePron i_Pron) (ComplSlash (SlashV2A paint_V2A (PositA red_A)) (UsePron it_Pron))
LangEng: I paint it red


8 msec
Lang> Lang: RelCN (UseN car_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePron i_Pron) (SlashVV want_VV (SlashV2a buy_V2)))))
LangEng: car which I want to buy


8 msec
Lang> Lang: RelCN (UseN car_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePron they_Pron) (SlashV2VNP beg_V2V (UsePron i_Pron) (SlashV2a buy_V2)))))
LangEng: car which they beg me to buy


8 msec
Lang> Lang: PredVP (UsePron he_Pron) (ReflVP (SlashV2a love_V2))
LangEng: he loves himself


8 msec
Lang> Lang: PredVP (DetNP (DetQuant this_Quant NumSg)) (UseComp (CompAP (PositA warm_A)))
LangEng: this is warm


4 msec
Lang> Lang: PredVP (UsePron we_Pron) (PassV2 love_V2)
LangEng: we are loved


8 msec
Lang> Lang: PredVP (UsePron we_Pron) (AdvVP (UseV sleep_V) here_Adv)
LangEng: we sleep here


4 msec
Lang> Lang: PredVP (UsePron we_Pron) (AdVVP always_AdV (UseV sleep_V))
LangEng: we always sleep


8 msec
Lang> Lang: PredVP (UsePron we_Pron) (UseComp (CompAP (PositA small_A)))
LangEng: we are small


8 msec
Lang> Lang: PredVP (UsePron i_Pron) (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN man_N))))
LangEng: I am a man


4 msec
Lang> Lang: PredVP (UsePron i_Pron) (UseComp (CompAdv here_Adv))
LangEng: I am here


8 msec
Lang> 0 msec
Lang> 4 msec
Lang> 8 msec
Lang> 4 msec
Lang> 4 msec
Lang> Lang: RelCN (UseN car_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePron they_Pron) (SlashV2VNP beg_V2V (UsePron i_Pron) (SlashVV want_VV (SlashV2A paint_V2A (PositA red_A)))))))
LangEng: car which they beg me to want to paint red


12 msec
Lang> Lang: PhrUtt NoPConj (UttImpSg PPos (ImpVP (AdVVP always_AdV (ComplSlash (SlashV2a listen_V2) (DetCN (DetQuant DefArt NumSg) (UseN sea_N)))))) NoVoc
LangEng: always listen to the sea


8 msec
Lang> Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (ExistNP (PredetNP only_Predet (DetCN (DetQuant IndefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n2)))))))) (AdvCN (RelCN (UseN woman_N) (UseRCl (TTAnt TCond ASimul) PPos (RelSlash IdRP (SlashPrep (PredVP (UsePron i_Pron) (ComplVV want_VV (PassV2 see_V2))) with_Prep)))) (PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (UseN rain_N))))))))) NoVoc
LangEng: there are only two women with whom I would want to be seen in the rain


16 msec
Lang> Lang: PhrUtt NoPConj (UttImpSg PPos (ImpVP (ComplSlash (SlashV2A paint_V2A (ConjAP both7and_DConj (BaseAP (ComparA small_A (DetCN (DetQuant DefArt NumSg) (UseN sun_N))) (ComparA big_A (DetCN (DetQuant DefArt NumSg) (UseN moon_N)))))) (DetCN (DetQuant DefArt NumSg) (UseN earth_N))))) NoVoc
LangEng: paint the earth both smaller than the sun and bigger than the moon


12 msec
Lang> Lang: PhrUtt NoPConj (ImpPl1 (ComplVS hope_VS (ConjS either7or_DConj (BaseS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumSg) (ComplN2 father_N2 (DetCN (DetQuant DefArt NumSg) (UseN baby_N)))) (UseV run_V))) (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumSg) (UseN2 (Use2N3 distance_N3))) (UseComp (CompAP (PositA small_A))))))))) NoVoc
LangEng: let's hope that either the father of the baby runs or the distance is small


12 msec
Lang> Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN every_Det (UseN baby_N)) (UseComp (CompNP (ConjNP either7or_DConj (BaseNP (DetCN (DetQuant IndefArt NumSg) (UseN boy_N)) (DetCN (DetQuant IndefArt NumSg) (UseN girl_N))))))))) NoVoc
LangEng: every baby is either a boy or a girl


12 msec
Lang> Lang: PhrUtt NoPConj (UttAdv (ConjAdv either7or_DConj (ConsAdv here7from_Adv (BaseAdv there_Adv everywhere_Adv)))) NoVoc
LangEng: either from here , there or everywhere


8 msec
Lang> Lang: PhrUtt NoPConj (UttVP (PassV2 know_V2)) NoVoc
LangEng: to be known


8 msec
Lang> Lang: RelCN (UseN bird_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePron i_Pron) (SlashVV want_VV (SlashV2A paint_V2A (PositA red_A))))))
LangEng: bird which I want to paint red


4 msec
Lang> Lang: UttImpSg PPos (ImpVP (ComplVV want_VV (ComplSlash (SlashV2a buy_V2) (UsePron it_Pron))))
LangEng: want to buy it


8 msec
Lang> Lang: UttImpSg PPos (ImpVP (ComplVV want_VV (ComplSlash (SlashV2A paint_V2A (PositA red_A)) (UsePron it_Pron))))
LangEng: want to paint it red


8 msec
Lang> Lang: UttImpSg PPos (ImpVP (ComplSlash (SlashVV want_VV (SlashV2VNP beg_V2V (UsePron i_Pron) (SlashV2a buy_V2))) (UsePron it_Pron)))
LangEng: want it to beg me to buy


12 msec
Lang> Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumPl) (UseN fruit_N)) (ReflVP (Slash3V3 sell_V3 (DetCN (DetQuant DefArt NumSg) (UseN road_N))))))) NoVoc
LangEng: the fruits sell themselves to the road


8 msec
Lang> Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron i_Pron) (ReflVP (SlashV2V beg_V2V (UseV live_V)))))) NoVoc
LangEng: I beg myself to live


8 msec
Lang> Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron i_Pron) (ReflVP (SlashV2S answer_V2S (UseCl (TTAnt TPres ASimul) PPos (ImpersCl (ComplVV must_VV (ReflVP (SlashV2a understand_V2)))))))))) NoVoc
LangEng: I answer to myself that it must understand itself


16 msec
Lang> Lang: PhrUtt NoPConj (UttImpSg PPos (ImpVP (ReflVP (SlashV2Q ask_V2Q (UseQCl (TTAnt TPast ASimul) PPos (QuestVP whoSg_IP (UseV come_V))))))) NoVoc
LangEng: ask yourself who came


8 msec
Lang> Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron i_Pron) (ReflVP (SlashV2A paint_V2A (ComparA beautiful_A (UsePN john_PN))))))) NoVoc
LangEng: I painted myself more beautiful than John


8 msec
Lang> 0 msec
Lang> 8 msec
Lang> 4 msec
Lang> Lang: UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN (DetQuant this_Quant NumSg) (UseN grammar_N)) (ComplSlash (SlashV2a speak_V2) (DetCN (DetQuant IndefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot1to19 n2))))))) (UseN language_N)))))
LangEng: this grammar speaks twelve languages


16 msec
Lang> Lang: UseCl (TTAnt TPast AAnter) PPos (PredVP (UsePron she_Pron) (ComplSlash (SlashV2a buy_V2) (DetCN (DetQuant IndefArt NumSg) (AdjCN (PositA red_A) (UseN house_N)))))
LangEng: she had bought a red house


8 msec
Lang> See you.
